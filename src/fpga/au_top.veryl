module au_top (
    clk  : input 'ext    clock,
    rst_n: input 'system reset,

    led: output 'system logic<8>,

    usb_rx: input  'system logic,
    usb_tx: output 'system logic,

) {
    var sysclk       : 'system clock;
    var clk_locked   :         bool ;
    let clock_gen_rst: 'system logic = rst_n;

    // The clocking wizard takes care of handling CDC
    unsafe (cdc) {
        inst clk_gen: $sv::clk_wiz_0 (
            clk_in1 : clk          ,
            clk_out1: sysclk       ,
            resetn  : clock_gen_rst,
            locked  : clk_locked   ,
        );
    }

    inst soc: Soc::<ROM_CONFIG, RAM_CONFIG, PERIPH_BUS_CONFIG> (
        clk   : sysclk  ,
        rst_n           ,
        led   : led[7:1],
        usb_rx          ,
        usb_tx          ,
    );

    // Activity LED
    var r_count: 'system logic<32>;
    always_ff (sysclk) {
        if_reset {
            r_count = 0;
            led[0]  = 0;
        } else {
            r_count += 1;
            led[0]  =  r_count[24];
        }
    }
}
