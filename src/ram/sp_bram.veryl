/// Single-port Block RAM
/// Hardcoded to 32 bit data width
/// Memory is word-addressed. Use write_byte_enable
/// to write to individual bytes.
module sp_bram #(
    param INIT_FILE: string = "",
    param RAM_DEPTH: u32 = 1024,
    param ADDR_WIDTH: u32 = $clog2(RAM_DEPTH),
)(
    clk: input clock,
    rst_n: input logic,
    enable: input bool,
    address: input logic<ADDR_WIDTH>,
    write_data: input logic<32>,
    byte_write_enable: input logic<NB_COL>,

    read_data: output logic<32>,
) {
    const NB_COL: u8 = 4;
    var mem: logic<32> [RAM_DEPTH];

    initial {
        if INIT_FILE != "" {
            $readmemh(INIT_FILE, mem);
        }
    }

    always_ff {
        for i: u32 in 0..NB_COL {
            if enable {
                if byte_write_enable[i] {
                    mem[address][(i[1:0]*8)+:8] = write_data[(i[1:0]*8)+:8];
                }
            }
        }
    }

    always_ff {
        if !rst_n {
            read_data = 0;
        } else if enable {
            read_data = mem[address];
        }
    }
}